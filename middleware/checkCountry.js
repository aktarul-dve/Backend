const fetch = require("node-fetch");

const checkCountry = async (req, res, next) => {
  try {
    // ‡¶á‡¶â‡¶ú‡¶æ‡¶∞‡ßá‡¶∞ IP ‡¶®‡ßá‡¶ì‡ßü‡¶æ
    let ip =
      req.headers["x-forwarded-for"]?.split(",")[0].trim() || req.socket.remoteAddress;

    // Localhost / Internal IP fallback
    if (ip === "::1" || ip === "127.0.0.1" || ip?.startsWith("::ffff:10.")) {
      ip = ""; // ipapi ‡¶®‡¶ø‡¶ú‡ßá‡¶∞ public IP detect ‡¶ï‡¶∞‡¶¨‡ßá
    }


    // ipapi ‡¶•‡ßá‡¶ï‡ßá country ‡¶´‡ßá‡¶ö ‡¶ï‡¶∞‡¶æ
    console.log("üåç Detected IP:", ip);
    const response = await fetch(`https://ipapi.co/${ip}/json/`);
    const data = await response.json();
    console.log("üåç ipapi response:", data);
    const country = data.country_name; // Example: "United States"

    // ‡¶Ø‡¶¶‡¶ø country USA ‡¶®‡¶æ ‡¶π‡ßü ‡¶§‡¶æ‡¶π‡¶≤‡ßá error ‡¶¶‡¶ø‡¶¨‡ßá
    if (country !== "United States") {
      return res.status(403).json({
        success: false,
        message: "üëâ ‡¶Ü‡¶ó‡ßá USA country ‡¶¶‡¶ø‡ßü‡ßá ‡¶ï‡¶æ‡¶ú ‡¶ï‡¶∞‡ßÅ‡¶®‡•§",
      });
    }

    // Country ‡¶†‡¶ø‡¶ï ‡¶•‡¶æ‡¶ï‡¶≤‡ßá next() ‡¶¶‡¶ø‡ßü‡ßá route ‡¶è ‡¶™‡¶æ‡¶†‡¶æ‡¶¨‡ßá
    next();
  } catch (error) {
    console.error("Country check error:", error);
    return res.status(500).json({
      success: false,
      message: "Country ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡¶§‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá‡•§",
    });
  }
};

module.exports = checkCountry;
